ADiff x1;
ADiff x2;
ADiff u1;
ADiff p1;
double w;
int i;
output_file = "ex3spring.data";
n_states = 2;
n_controls = 1;
n_parameters = 1;
n_initial = 2;
n_inequality = 3;
n_terminal = 2;
n_nodes = 201;
initial_time = 0.0;
final_time = 1.0;
tolerance = 1.0e-6;
control_type = CONSTANT;

w = 3.14159265358979;

initial_constraint {
    x1 = y(1);
    x2 = y(2);
    p1 = p(1);
    Gamma(1) = x1;
    Gamma(2) = x2;
}
dynamic_equation_and_cost_function {
    x1 = y(1);
    x2 = y(2);
    u1 = u(1);
    p1 = p(1);
    F(1) = x2*p1;
    F(2) = (u1- w*w*x1)*p1;
}
inequality_constraint {
    x1 = y(1);
    x2 = y(2);
    u1 = u(1);
    p1 = p(1);
    d(1) = u1-1.0;
    d(2) = -1.0-u1;
    d(3) = -p1;
}
terminal_condition {
    x1 = y(1);
    x2 = y(2);
    p1 = p(1);
    Psi(1) = x1-0.25;
    Psi(2) = x2;
    phi = p1;
}
solution_estimate {
    p0(1) = 2.0;
    /*
    for(i=1;i<=n_nodes;i++)
        u0(1,i) = (i-1.0)/(1.0*n_nodes);
    */
    /* do i = 1,n_nodes */
    Do(i, 1, n_nodes) {
        u0(1, i) = (Double(i)-1.0) / Double(n_nodes);
    }
    /* Double(i) = ((double)i) */
}
